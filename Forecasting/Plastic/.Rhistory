library(forecast)
library(fpp)
library(smooth)
library(readxl)
Plastic <- read.csv(choose.files())
# Seasonality 12 months
#Plotting graph of Months vs Sales
windows()
plot(Plastic$Sales,main = "Historical Graph", xlab="Months", ylab="Sales(Actual)", col.axis="blue",type="o")
# creating 12 dummy variables as Seasonality is of 12 months. Keeping length 60 as we have 96 observations
dummy_months<- data.frame(outer(rep(month.abb,length = 60), month.abb,"==") + 0 )
View(dummy_months)
# Assigning month names
colnames(dummy_months)<-month.abb
View(dummy_months)
PlasticData<-cbind(Plastic,dummy_months)
View(PlasticData)
# creating required vatiavle columns
PlasticData["t"]<- 1:60
PlasticData["log_Sales"]<-log(PlasticData["Sales"])
PlasticData["t_square"]<-PlasticData["t"]*PlasticData["t"]
View(PlasticData)
attach(PlasticData)
# splitting data into train and test
train<-PlasticData[1:48,]
test<-PlasticData[49:60,]
########################### LINEAR MODEL #############################
linear_model<-lm(Sales~t,data=train)
summary(linear_model)
linear_pred<-data.frame(predict(linear_model,interval='predict',newdata =test))
rmse_linear<-sqrt(mean((test$Sales-linear_pred$fit)^2,na.rm = T))
rmse_linear # 260.9378
######################### Exponential #################################
expo_model<-lm(log_Sales~t,data=train)
summary(expo_model)
expo_pred<-data.frame(predict(expo_model,interval='predict',newdata=test))
rmse_expo<-sqrt(mean((test$Sales-exp(expo_pred$fit))^2,na.rm = T))
rmse_expo # 268.6938
######################### Quadratic ####################################
Quad_model<-lm(Sales~t+t_square,data=train)
summary(Quad_model)
Quad_pred<-data.frame(predict(Quad_model,interval='predict',newdata=test))
rmse_Quad<-sqrt(mean((test$Sales-Quad_pred$fit)^2,na.rm=T))
rmse_Quad # 297.4067
######################### Additive Seasonality #########################
sea_add_model<-lm(Sales~Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=train)
summary(sea_add_model)
sea_add_pred<-data.frame(predict(sea_add_model,newdata=test,interval='predict'))
rmse_sea_add<-sqrt(mean((test$Sales-sea_add_pred$fit)^2,na.rm = T))
rmse_sea_add # 235.6027
######################## Additive Seasonality with Linear #################
Add_sea_Linear_model<-lm(Sales~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=train)
summary(Add_sea_Linear_model)
Add_sea_Linear_pred<-data.frame(predict(Add_sea_Linear_model,interval='predict',newdata=test))
rmse_Add_sea_Linear<-sqrt(mean((test$Sales-Add_sea_Linear_pred$fit)^2,na.rm=T))
rmse_Add_sea_Linear # 135.5536
######################## Additive Seasonality with Quadratic #################
Add_sea_Quad_model<-lm(Sales~t+t_square+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=train)
summary(Add_sea_Quad_model)
Add_sea_Quad_pred<-data.frame(predict(Add_sea_Quad_model,interval='predict',newdata=test))
rmse_Add_sea_Quad<-sqrt(mean((test$Sales-Add_sea_Quad_pred$fit)^2,na.rm=T))
rmse_Add_sea_Quad # 218.1939
######################## Multiplicative Seasonality #########################
multi_sea_model<-lm(log_Sales~Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data = train)
summary(multi_sea_model)
multi_sea_pred<-data.frame(predict(multi_sea_model,newdata=test,interval='predict'))
rmse_multi_sea<-sqrt(mean((test$Sales-exp(multi_sea_pred$fit))^2,na.rm = T))
rmse_multi_sea # 239.6543
######################## Multiplicative Seasonality Linear trend ##########################
multi_add_sea_model<-lm(log_Sales~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data = train)
summary(multi_add_sea_model)
multi_add_sea_pred<-data.frame(predict(multi_add_sea_model,newdata=test,interval='predict'))
rmse_multi_add_sea<-sqrt(mean((test$Sales-exp(multi_add_sea_pred$fit))^2,na.rm = T))
rmse_multi_add_sea # 160.6833
# Preparing table on model and it's RMSE values
table_rmse<-data.frame(c("rmse_linear","rmse_expo","rmse_Quad","rmse_sea_add","rmse_Add_sea_Linear","rmse_Add_sea_Quad","rmse_multi_sea","rmse_multi_add_sea"),c(rmse_linear,rmse_expo,rmse_Quad,rmse_sea_add,rmse_Add_sea_Linear,rmse_Add_sea_Quad,rmse_multi_sea,rmse_multi_add_sea))
colnames(table_rmse)<-c("model","RMSE")
table_rmse$RMSE <- round(table_rmse$RMSE,0)
View(table_rmse)
# Additive Seasonality with Linear trend has least RMSE value so we can consider this s a final model
#Building Final Model with complete data set
Final_Model<-lm(Sales~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=PlasticData)
#######################################3############## Predicting new data on final model ###############################3#############
#Creating New datarame for required forcast (here I am taking forecast of next 12 months)
Month1 <- seq(from = as.Date("1954-01-01"), to = as.Date("1954-12-01"), by = 'month')
X1 <- data.frame(outer(rep(month.abb,length = 12), month.abb,"==") + 0 )
colnames(X1)<-month.abb
t1 <- 61:72
ForecastData <- data.frame(Month1,X1,t1)
ForecastData$Sales_Forecast <- NA   #creating Null variable to store predicted values
colnames(ForecastData)[1]<- paste("Month") #changing column name as per final model
colnames(ForecastData)[14]<- paste("t") #changing column name as per final model
ForecastData <- cbind(ForecastData[1],ForecastData[15],ForecastData[2:14]) #rearrangong the columns
pred_Sales_Forecast <- predict(Final_Model, newdata = ForecastData) #predicting the ForecastData with Final_Model
ForecastData$Sales_Forecast <- pred_Sales_Forecast #storing predicted values in Sales column
Sales_Forecast_Data <- ForecastData[,-c(3:15)] # removing created dummy columns
View(Sales_Forecast_Data)
################################################################################################################################
#checking if residuals of final model are carring any informtion
Final_Model_residuals <- residuals(Final_Model)
Final_Model_residuals[1:10]
windows()
acf(Final_Model_residuals,lag.max = 12)
# First two lags are above +-2 standard error. That means errors contain some information
# By principal of parcimony we will consider lag - 1  as we have so many significant lags
# Building Autoregressive model on residuals consider lag-1
k <- arima(Final_Model_residuals, order=c(1,0,0))
str(k)
View(data.frame(ressid=resid,newresid=k$residuals))
windows()
acf(k$residuals,lag.max = 12)
#All lags are below +-2 standard error. That means errors doesnot contain any information
#forecasting next 12 residuals
Forecast_residuals<- predict(k,n.ahead = 12)
str(Forecast_residuals)
Forecast_residuals$pred
# adding errors column into forecast sheet
Sales_Forecast_Data["Forecasted_Errors"] <- Forecast_residuals$pred
#Adding forecasted errors to forecasted sales figures
Sales_Forecast_Data["Final_Sales_Forecast_Data"] <- round((Sales_Forecast_Data$Sales_Forecast+Sales_Forecast_Data$Forecasted_Errors),0)
View(Sales_Forecast_Data)
#Saving the final forecasted data frame in to excel file
write.csv(Sales_Forecast_Data,file="Sales_Forecast_Data.csv",col.names = F,row.names = F)
library(forecast)
library(fpp)
library(smooth)
library(readxl)
Plastic <- read.csv(choose.files())
# Seasonality 12 months
#Plotting graph of Months vs Sales
windows()
plot(Plastic$Sales,main = "Historical Graph", xlab="Months", ylab="Sales(Actual)", col.axis="blue",type="o")
# creating 12 dummy variables as Seasonality is of 12 months. Keeping length 60 as we have 96 observations
dummy_months<- data.frame(outer(rep(month.abb,length = 60), month.abb,"==") + 0 )
View(dummy_months)
# Assigning month names
colnames(dummy_months)<-month.abb
View(dummy_months)
PlasticData<-cbind(Plastic,dummy_months)
View(PlasticData)
# creating required vatiavle columns
PlasticData["t"]<- 1:60
PlasticData["log_Sales"]<-log(PlasticData["Sales"])
PlasticData["t_square"]<-PlasticData["t"]*PlasticData["t"]
View(PlasticData)
attach(PlasticData)
# splitting data into train and test
train<-PlasticData[1:48,]
test<-PlasticData[49:60,]
########################### LINEAR MODEL #############################
linear_model<-lm(Sales~t,data=train)
summary(linear_model)
linear_pred<-data.frame(predict(linear_model,interval='predict',newdata =test))
rmse_linear<-sqrt(mean((test$Sales-linear_pred$fit)^2,na.rm = T))
rmse_linear # 260.9378
######################### Exponential #################################
expo_model<-lm(log_Sales~t,data=train)
summary(expo_model)
expo_pred<-data.frame(predict(expo_model,interval='predict',newdata=test))
rmse_expo<-sqrt(mean((test$Sales-exp(expo_pred$fit))^2,na.rm = T))
rmse_expo # 268.6938
######################### Quadratic ####################################
Quad_model<-lm(Sales~t+t_square,data=train)
summary(Quad_model)
Quad_pred<-data.frame(predict(Quad_model,interval='predict',newdata=test))
rmse_Quad<-sqrt(mean((test$Sales-Quad_pred$fit)^2,na.rm=T))
rmse_Quad # 297.4067
######################### Additive Seasonality #########################
sea_add_model<-lm(Sales~Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=train)
summary(sea_add_model)
sea_add_pred<-data.frame(predict(sea_add_model,newdata=test,interval='predict'))
rmse_sea_add<-sqrt(mean((test$Sales-sea_add_pred$fit)^2,na.rm = T))
rmse_sea_add # 235.6027
######################## Additive Seasonality with Linear #################
Add_sea_Linear_model<-lm(Sales~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=train)
summary(Add_sea_Linear_model)
Add_sea_Linear_pred<-data.frame(predict(Add_sea_Linear_model,interval='predict',newdata=test))
rmse_Add_sea_Linear<-sqrt(mean((test$Sales-Add_sea_Linear_pred$fit)^2,na.rm=T))
rmse_Add_sea_Linear # 135.5536
######################## Additive Seasonality with Quadratic #################
Add_sea_Quad_model<-lm(Sales~t+t_square+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=train)
summary(Add_sea_Quad_model)
Add_sea_Quad_pred<-data.frame(predict(Add_sea_Quad_model,interval='predict',newdata=test))
rmse_Add_sea_Quad<-sqrt(mean((test$Sales-Add_sea_Quad_pred$fit)^2,na.rm=T))
rmse_Add_sea_Quad # 218.1939
######################## Multiplicative Seasonality #########################
multi_sea_model<-lm(log_Sales~Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data = train)
summary(multi_sea_model)
multi_sea_pred<-data.frame(predict(multi_sea_model,newdata=test,interval='predict'))
rmse_multi_sea<-sqrt(mean((test$Sales-exp(multi_sea_pred$fit))^2,na.rm = T))
rmse_multi_sea # 239.6543
######################## Multiplicative Seasonality Linear trend ##########################
multi_add_sea_model<-lm(log_Sales~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data = train)
summary(multi_add_sea_model)
multi_add_sea_pred<-data.frame(predict(multi_add_sea_model,newdata=test,interval='predict'))
rmse_multi_add_sea<-sqrt(mean((test$Sales-exp(multi_add_sea_pred$fit))^2,na.rm = T))
rmse_multi_add_sea # 160.6833
# Preparing table on model and it's RMSE values
table_rmse<-data.frame(c("rmse_linear","rmse_expo","rmse_Quad","rmse_sea_add","rmse_Add_sea_Linear","rmse_Add_sea_Quad","rmse_multi_sea","rmse_multi_add_sea"),c(rmse_linear,rmse_expo,rmse_Quad,rmse_sea_add,rmse_Add_sea_Linear,rmse_Add_sea_Quad,rmse_multi_sea,rmse_multi_add_sea))
colnames(table_rmse)<-c("model","RMSE")
table_rmse$RMSE <- round(table_rmse$RMSE,0)
View(table_rmse)
# Additive Seasonality with Linear trend has least RMSE value so we can consider this s a final model
#Building Final Model with complete data set
Final_Model<-lm(Sales~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov,data=PlasticData)
#######################################3############## Predicting new data on final model ###############################3#############
#Creating New datarame for required forcast (here I am taking forecast of next 12 months)
Month1 <- seq(from = as.Date("1954-01-01"), to = as.Date("1954-12-01"), by = 'month')
X1 <- data.frame(outer(rep(month.abb,length = 12), month.abb,"==") + 0 )
colnames(X1)<-month.abb
t1 <- 61:72
ForecastData <- data.frame(Month1,X1,t1)
ForecastData$Sales_Forecast <- NA   #creating Null variable to store predicted values
colnames(ForecastData)[1]<- paste("Month") #changing column name as per final model
colnames(ForecastData)[14]<- paste("t") #changing column name as per final model
ForecastData <- cbind(ForecastData[1],ForecastData[15],ForecastData[2:14]) #rearrangong the columns
pred_Sales_Forecast <- predict(Final_Model, newdata = ForecastData) #predicting the ForecastData with Final_Model
ForecastData$Sales_Forecast <- pred_Sales_Forecast #storing predicted values in Sales column
Sales_Forecast_Data <- ForecastData[,-c(3:15)] # removing created dummy columns
View(Sales_Forecast_Data)
################################################################################################################################
#checking if residuals of final model are carring any informtion
Final_Model_residuals <- residuals(Final_Model)
Final_Model_residuals[1:10]
windows()
acf(Final_Model_residuals,lag.max = 12)
# First two lags are above +-2 standard error. That means errors contain some information
# By principal of parcimony we will consider lag - 1  as we have so many significant lags
# Building Autoregressive model on residuals consider lag-1
k <- arima(Final_Model_residuals, order=c(1,0,0))
str(k)
View(data.frame(ressid=resid,newresid=k$residuals))
windows()
acf(k$residuals,lag.max = 12)
#All lags are below +-2 standard error. That means errors doesnot contain any information
#forecasting next 12 residuals
Forecast_residuals<- predict(k,n.ahead = 12)
str(Forecast_residuals)
Forecast_residuals$pred
# adding errors column into forecast sheet
Sales_Forecast_Data["Forecasted_Errors"] <- Forecast_residuals$pred
#Adding forecasted errors to forecasted sales figures
Sales_Forecast_Data["Final_Sales_Forecast_Data"] <- round((Sales_Forecast_Data$Sales_Forecast+Sales_Forecast_Data$Forecasted_Errors),0)
View(Sales_Forecast_Data)
#Saving the final forecasted data frame in to excel file
write.csv(Sales_Forecast_Data,file="Sales_Forecast_Data.csv",col.names = F,row.names = F)
