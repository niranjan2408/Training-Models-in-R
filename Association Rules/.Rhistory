library(arules)
groceries<-read.transactions(choose.files(),format = "basket")
inspect(groceries[1:10])
summary(groceries)
gg<-read.csv(choose.files())
gg1<-as.matrix(gg) #convert data frame into matrix
gg2<-as(gg1,"transactions") #converting into formal class transactions so that we can use it in apriori
library(arules)
groceries<-read.transactions(choose.files(),format = "basket")
inspect(groceries[1:10])
summary(groceries) #density of 0.0005240481
itemFrequencyPlot(groceries,topN=10)
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.3,minlen=3))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.5,minlen=3))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.5,minlen=5))
inspect(sort(rules,by="lift"))
library(arulesViz)
plot(rules, method = "scatterplot")
plot(rules, method = "grouped")
plot(rules, method = "graph")
rules<- sort(rules, by="lift")
inspect(head(rules))
inspect(head(sort(rules, by="lift")))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.5,minlen=4))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.6,minlen=4))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.8,minlen=4))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.9,minlen=4))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.95,minlen=4))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.99,minlen=4))
rules<-apriori(groceries,parameter = list(support=0.0005140481,confidence=0.8,minlen=5))
rules<-apriori(groceries,parameter = list(support=0.0004,confidence=0.8,minlen=5))
inspect(sort(rules,by="lift"))
library(arulesViz)
plot(rules, method = "scatterplot")
plot(rules, method = "grouped")
library(arules)
book<-read.csv(choose.files()) #read csv file
book1<-as.matrix(book) #convert data frame into matrix
book2<-as(book1,"transactions") #converting into formal class transactions so that we can use it in apriori
summary(book2) #density of 0.2202273
rules <- apriori(book2,parameter=list(support=0.02, confidence = 0.7,minlen=6))
inspect(sort(rules,by="lift"))
library(arulesViz)
plot(rules, method = "scatterplot")
plot(rules, method = "grouped")
plot(rules, method = "graph")
inspect(head(sort(rules, by="lift")))
my_movies<-read.csv(choose.files()) #read csv file
View(my_movies)
my_movies1<-my_movies[,1:5] #convert data frame into matrix
View(my_movies1)
book2<-as(my_movies1,"transactions") #converting into formal class transactions so that we can use it in apriori
my_movies1<-my_movies[,6:16] #convert data frame into matrix
my_movies1<-my_movies[,6:15] #convert data frame into matrix
View(my_movies1)
my_movies2<-as(my_movies1,"transactions") #converting into formal class transactions so that we can use it in apriori
my_movies1<-as.matrix(my_movies1)
my_movies2<-as(my_movies1,"transactions") #converting into formal class transactions so that we can use it in apriori
View(my_movies1)
my_movies12<-as.matrix(my_movies1)
my_movies2<-as.matrix(my_movies1)
my_movies3<-as(my_movies2,"transactions") #converting into formal class transactions so that we can use it in apriori
my_movies<-read.csv(choose.files()) #read csv file
my_movies<-my_movies[,6:15] #convert data frame into matrix
my_movies1<-as.matrix(my_movies)
my_movies2<-as(my_movies1,"transactions") #converting into formal class transactions so that we can use it in apriori
book<-read.csv(choose.files()) #read csv file
book1<-as.matrix(book) #convert data frame into matrix
book2<-as(book1,"transactions") #converting into formal class transactions so that we can use it in apriori
library(arules)
my_movies<-read.csv(choose.files()) #read csv file
my_movies<-my_movies[,6:15] #convert data frame into matrix
my_movies1<-as.matrix(my_movies)
my_movies2<-as(my_movies1,"transactions") #converting into formal class transactions so that we can use it in apriori
summary(my_movies2) #density of 0.2202273
rules <- apriori(book2,parameter=list(support=0.2, confidence = 0.7,minlen=6))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.7,minlen=6))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.5,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.4,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.15, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.14, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.13, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.12, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.11, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.105, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.104, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.103, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.102, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.101, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.100, confidence = 0.3,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.5,minlen=3))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.5,minlen=4))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.6,minlen=4))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.7,minlen=4))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.8,minlen=4))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.8,minlen=5))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.7,minlen=5))
rules <- apriori(my_movies2,parameter=list(support=0.1, confidence = 0.7,minlen=4))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.7,minlen=4))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.2,minlen=4))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.2,minlen=3))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.2999, confidence = 0.2,minlen=3))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.2999, confidence = 0.1,minlen=3))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.2999, confidence = 0.1,minlen=2))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.2999, confidence = 0.5,minlen=2))
inspect(sort(rules,by="lift"))
rules <- apriori(my_movies2,parameter=list(support=0.2, confidence = 0.5,minlen=2))
inspect(sort(rules,by="lift"))
library(arulesViz)
plot(rules, method = "scatterplot")
plot(rules, method = "grouped")
